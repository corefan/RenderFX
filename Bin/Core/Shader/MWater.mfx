Pass
{
	State
	{
		CullMode INHERIT
		DepthMode INHERIT
		BlendMode INHERIT
	}
	
	Uniform
	{
		u_UVScale FLOAT4
		u_Color FLOAT4
	
		u_WVP WORLD_VIEW_PROJ_MATRIX
		u_FogColor FOG_COLOR
		u_FogParam FOG_PARAM
	}
	
	Attribute
	{
		i_Position POSITION
		i_Texcoord TEXCOORD0
	}
	
	Sampler
	{
		Index 0
		Name s_Water
		BindType DIFFUSE
		Address WRAP
	}
	
	Sampler
	{
		Index 1
		Name s_Depth
		BindType EXTERN0
		Address CLAMP
	}
	
	VertexShader {
		uniform mat4 u_WVP;
		uniform float4 u_UVScale;

		uniform float4 u_FogColor;
		uniform float4 u_FogParam;

		attribute float4 i_Position;
		attribute float i_Texcoord;

		varying float2 o_uv;
		varying float2 o_uvDepth;
		varying float4 o_fog;

		void main()
		{
			gl_Position = transform4(float4(i_Position.x, 0, i_Position.y, 1.0), u_WVP);

			o_uv = i_Position.xy * u_UVScale.x;
			o_uvDepth = float2(i_Texcoord * u_UVScale.y, 0.0);

			// fog
			float dt = gl_Position.w;
			o_fog.rgb = u_FogColor.rgb;
			o_fog.a = clamp((dt - u_FogParam.x) * u_FogParam.z, 0.0, 1.0);
		}
	}
	
	PixelShader {
		precision highp float;
		precision mediump int;
		
		varying float2 o_uv;
		varying float2 o_uvDepth;
		varying float4 o_fog;

		uniform float4 u_Color;

		uniform sampler2D s_Water;
		uniform sampler2D s_Depth;

		void main()
		{
			gl_FragColor = tex2D(s_Water, o_uv) * u_Color;
			gl_FragColor.a *= tex2D(s_Depth, o_uvDepth).a;
			gl_FragColor.rgb = gl_FragColor.rgb * (1.0 - o_fog.a) + o_fog.rgb * o_fog.a;
		}
	}
}
