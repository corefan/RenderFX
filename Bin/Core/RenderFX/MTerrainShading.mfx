Pass
{
	State
	{
		CullMode		BACK
		DepthMode		LESS_EQUAL
		BlendMode		OPACITY
	}
	
	Uniform
	{
		u_XZTransform	FLOAT4
		u_UVScale		FLOAT4
		
		u_WVP			WORLD_VIEW_PROJ_MATRIX
		
		u_Ambient 		AMBIENT
		u_Diffuse 		MATERIAL_DIFFUSE
	}
	
	Attribute
	{
		i_XZ			POSITION
		i_UV			TEXCOORD0
		i_NormalHeight	NORMAL
	}
	
	Sampler
	{
		Name s_blend
		BindType DIFFUSE
		Address CLAMP
	}
	
	Sampler
	{
		Name s_detail1
		BindType EXTERN0
	}
	
	Sampler
	{
		Name s_detail2
		BindType EXTERN1
	}
	
	Sampler
	{
		Name s_detail3
		BindType EXTERN2
	}
	
	Sampler
	{
		Name s_detail4
		BindType EXTERN3
	}

	Sampler
	{
		Name s_lighting
		BindType SPECIAL
		BindId 9
		Filter DEFAULT
		Address CLAMP
		BorderColor 0 0 0 0
	}
	
	VertexShader {
		uniform mat4 u_WVP;

		uniform float4 u_XZTransform;
		uniform float4 u_UVScale;

		attribute float2 i_XZ;
		attribute float2 i_UV;
		attribute float4 i_NormalHeight;

		varying float2 o_uv;
		varying float4 o_proj;
		varying float4 o_detailUV12;
		varying float4 o_detailUV34;

		void main()
		{
			float2 xz = i_XZ.xy * u_XZTransform.w + u_XZTransform.xy;

			float4 position = float4(xz.x, i_NormalHeight.w, xz.y, 1.0);
			float3 normal = i_NormalHeight.xyz;

			// transform
			gl_Position = transform4(position, u_WVP);

			// uv
			o_uv = i_UV;
			o_proj = gl_Position;

			float2 flipUV = float2(position.x, -position.z);
			o_detailUV12.xy = flipUV * u_UVScale.x;
			o_detailUV12.zw = flipUV * u_UVScale.y;
			o_detailUV34.xy = flipUV * u_UVScale.z;
			o_detailUV34.zw = flipUV * u_UVScale.w;
		}
	}
	
	PixelShader {
		varying float2 o_uv;
		varying float4 o_proj;
		varying float4 o_detailUV12;
		varying float4 o_detailUV34;

		uniform float4 u_Ambient;
		uniform float4 u_Diffuse;
		
		uniform sampler2D s_blend;
		uniform sampler2D s_detail1;
		uniform sampler2D s_detail2;
		uniform sampler2D s_detail3;
		uniform sampler2D s_detail4;
		uniform sampler2D s_lighting;

		void main()
		{
			float2 o_detailUV1 = o_detailUV12.xy;
			float2 o_detailUV2 = o_detailUV12.zw;
			float2 o_detailUV3 = o_detailUV34.xy;
			float2 o_detailUV4 = o_detailUV34.zw;

			float4 weight = tex2D(s_blend, o_uv);

		#ifdef D_LAYER1 
			float4 color = tex2D(s_detail1, o_detailUV1);
		#endif

		#ifdef D_LAYER2
			float4 color = tex2D(s_detail1, o_detailUV1) * weight.r +
						 tex2D(s_detail2, o_detailUV2) * weight.g;
		#endif

		#ifdef D_LAYER3
			float4 color = tex2D(s_detail1, o_detailUV1) * weight.r +
						 tex2D(s_detail2, o_detailUV2) * weight.g +
						 tex2D(s_detail3, o_detailUV3) * weight.b;
		#endif

		#ifdef D_LAYER4
			float4 color = tex2D(s_detail1, o_detailUV1) * weight.r +
						 tex2D(s_detail2, o_detailUV2) * weight.g +
						 tex2D(s_detail3, o_detailUV3) * weight.b +
						 tex2D(s_detail4, o_detailUV4) * weight.a;
		#endif

			float2 luv;
		#ifdef D_OGL
			luv = (o_proj.xy / o_proj.w) * float2(0.5, 0.5) + 0.5;
		#else
			luv = (o_proj.xy / o_proj.w) * float2(0.5, -0.5) + 0.5;
		#endif
			float4 lighting = tex2D(s_lighting, luv);

			gl_FragColor = (u_Ambient + lighting * u_Diffuse) * color;
		}
	}
}
